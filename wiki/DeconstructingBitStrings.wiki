#summary Reading, finding, navigating
#labels Deprecated
----
*Next:* [Miscellany]
----
= Navigating =

== Seeking ==
The properties `bitpos` and `bytepos` are available for getting and setting the position, which is zero on creation of the `BitString`. For relative movement either use the `+=` and `-=` operators or the advance and retreat functions.

{{{
s = BitString('0x123456')
print s.bitpos                 # 0
s.bytepos += 2
print s.bitpos                 # 16 (note bitpos verses bytepos)
s.advancebits(4)
print s.read(4).bin            # 0b0110 (the final nibble '0x6')
}}}

== Finding ==

To search for a sub-string use the 'find' and 'findbytealigned' functions. These will set the position to the start of the next occurrence of the searched for string and return `True`, or just return `False` if the string isn't present. As its name implies, `findbytealigned` looks for only byte aligned occurrences of a whole-byte `BitString`.

{{{
s = BitString('0x00123400001234')
found = s.findbytealigned('0x1234')
print(found, s.bytepos)               # True, 1
found = s.findbytealigned('0xff')
print(found, s.bytepos)               # False, 1
}}}
----
*Next:* [Miscellany]
----